{"ast":null,"code":"var _jsxFileName = \"/Users/alexgilbert/Desktop/spacex-update/client/pages/rockets.js\";\nvar __jsx = React.createElement;\nimport React, { Fragment } from 'react';\nimport { useQuery, gql } from '@apollo/client';\nimport { Grid, GridItem, Title, Text } from '../componets/layout/layout.styles';\nconst ROCKETS_QUERY = gql`\n  query RocketsQuery {\n    rockets {\n      rocket_id\n      rocket_name\n      rocket_type\n    }\n  }\n`;\n\nconst Rockets = () => {\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(ROCKETS_QUERY);\n  if (loading) return __jsx(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 23\n    }\n  }, \"Loading...\");\n  if (error) return __jsx(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 21\n    }\n  }, \"Error :(\");\n  return __jsx(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  }, __jsx(Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }, \"Rockets\"), __jsx(Grid, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }, data.rockets.map(({\n    rocket_id,\n    rocket_name,\n    rocket_type\n  }) => __jsx(GridItem, {\n    key: rocket_id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 11\n    }\n  }, __jsx(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }\n  }, rocket_name, \" : \", rocket_type)))));\n};\n\nexport default Rockets;","map":{"version":3,"sources":["/Users/alexgilbert/Desktop/spacex-update/client/pages/rockets.js"],"names":["React","Fragment","useQuery","gql","Grid","GridItem","Title","Text","ROCKETS_QUERY","Rockets","loading","error","data","rockets","map","rocket_id","rocket_name","rocket_type"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,QAAT,EAAmBC,GAAnB,QAA8B,gBAA9B;AAEA,SAASC,IAAT,EAAeC,QAAf,EAAyBC,KAAzB,EAAgCC,IAAhC,QAA4C,mCAA5C;AAEA,MAAMC,aAAa,GAAGL,GAAI;;;;;;;;CAA1B;;AAUA,MAAMM,OAAO,GAAG,MAAM;AACpB,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,MAA2BV,QAAQ,CAACM,aAAD,CAAzC;AAEA,MAAIE,OAAJ,EAAa,OAAO,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP;AACb,MAAIC,KAAJ,EAAW,OAAO,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAP;AAEX,SACE,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,EAEE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGC,IAAI,CAACC,OAAL,CAAaC,GAAb,CAAiB,CAAC;AAAEC,IAAAA,SAAF;AAAaC,IAAAA,WAAb;AAA0BC,IAAAA;AAA1B,GAAD,KAChB,MAAC,QAAD;AAAU,IAAA,GAAG,EAAEF,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGC,WADH,SACmBC,WADnB,CADF,CADD,CADH,CAFF,CADF;AAcD,CApBD;;AAsBA,eAAeR,OAAf","sourcesContent":["import React, { Fragment } from 'react';\nimport { useQuery, gql } from '@apollo/client';\n\nimport { Grid, GridItem, Title, Text } from '../componets/layout/layout.styles';\n\nconst ROCKETS_QUERY = gql`\n  query RocketsQuery {\n    rockets {\n      rocket_id\n      rocket_name\n      rocket_type\n    }\n  }\n`;\n\nconst Rockets = () => {\n  const { loading, error, data } = useQuery(ROCKETS_QUERY);\n\n  if (loading) return <Text>Loading...</Text>;\n  if (error) return <Text>Error :(</Text>;\n\n  return (\n    <Fragment>\n      <Title>Rockets</Title>\n      <Grid>\n        {data.rockets.map(({ rocket_id, rocket_name, rocket_type }) => (\n          <GridItem key={rocket_id}>\n            <Text>\n              {rocket_name} : {rocket_type}\n            </Text>\n          </GridItem>\n        ))}\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default Rockets;\n"]},"metadata":{},"sourceType":"module"}