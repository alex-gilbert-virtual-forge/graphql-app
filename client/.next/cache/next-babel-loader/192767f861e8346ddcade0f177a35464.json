{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/alexgilbert/Desktop/spacex-update/client/pages/launches.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query LaunchesQuery {\\n    launches {\\n      flight_number\\n      mission_name\\n      launch_date_local\\n      launch_success\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Fragment } from 'react';\nimport { useQuery, gql } from '@apollo/client';\nimport { Grid, GridItem, Text } from '../componets/layout/layout.styles';\nvar LAUNCHES_QUERY = gql(_templateObject());\n\nvar Launches = function Launches() {\n  _s();\n\n  var _useQuery = useQuery(LAUNCHES_QUERY),\n      loading = _useQuery.loading,\n      error = _useQuery.error,\n      data = _useQuery.data;\n\n  if (loading) return __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 23\n    }\n  }, \"Loading...\");\n  if (error) return __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 21\n    }\n  }, \"Error :(\");\n  return __jsx(Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }\n  }, __jsx(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }, \"Launches\"), __jsx(Grid, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }, data.launches.map(function (_ref) {\n    var flight_number = _ref.flight_number,\n        mission_name = _ref.mission_name;\n    return __jsx(GridItem, {\n      key: flight_number,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }\n    }, __jsx(Text, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }\n    }, flight_number, \" : \", mission_name));\n  })));\n};\n\n_s(Launches, \"OQZiY3KqWoytFPIJWw/H9Hrmbok=\", false, function () {\n  return [useQuery];\n});\n\n_c = Launches;\nexport default Launches;\n\nvar _c;\n\n$RefreshReg$(_c, \"Launches\");","map":{"version":3,"sources":["/Users/alexgilbert/Desktop/spacex-update/client/pages/launches.js"],"names":["React","Fragment","useQuery","gql","Grid","GridItem","Text","LAUNCHES_QUERY","Launches","loading","error","data","launches","map","flight_number","mission_name"],"mappings":";;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,QAAT,EAAmBC,GAAnB,QAA8B,gBAA9B;AAEA,SAASC,IAAT,EAAeC,QAAf,EAAyBC,IAAzB,QAAqC,mCAArC;AAEA,IAAMC,cAAc,GAAGJ,GAAH,mBAApB;;AAWA,IAAMK,QAAQ,GAAG,SAAXA,QAAW,GAAM;AAAA;;AAAA,kBACYN,QAAQ,CAACK,cAAD,CADpB;AAAA,MACbE,OADa,aACbA,OADa;AAAA,MACJC,KADI,aACJA,KADI;AAAA,MACGC,IADH,aACGA,IADH;;AAGrB,MAAIF,OAAJ,EAAa,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP;AACb,MAAIC,KAAJ,EAAW,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAP;AAEX,SACE,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAEE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGC,IAAI,CAACC,QAAL,CAAcC,GAAd,CAAkB;AAAA,QAAGC,aAAH,QAAGA,aAAH;AAAA,QAAkBC,YAAlB,QAAkBA,YAAlB;AAAA,WACjB,MAAC,QAAD;AAAU,MAAA,GAAG,EAAED,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGA,aADH,SACqBC,YADrB,CADF,CADiB;AAAA,GAAlB,CADH,CAFF,CADF;AAcD,CApBD;;GAAMP,Q;UAC6BN,Q;;;KAD7BM,Q;AAsBN,eAAeA,QAAf","sourcesContent":["import React, { Fragment } from 'react';\nimport { useQuery, gql } from '@apollo/client';\n\nimport { Grid, GridItem, Text } from '../componets/layout/layout.styles';\n\nconst LAUNCHES_QUERY = gql`\n  query LaunchesQuery {\n    launches {\n      flight_number\n      mission_name\n      launch_date_local\n      launch_success\n    }\n  }\n`;\n\nconst Launches = () => {\n  const { loading, error, data } = useQuery(LAUNCHES_QUERY);\n\n  if (loading) return <p>Loading...</p>;\n  if (error) return <p>Error :(</p>;\n\n  return (\n    <Fragment>\n      <h1>Launches</h1>\n      <Grid>\n        {data.launches.map(({ flight_number, mission_name }) => (\n          <GridItem key={flight_number}>\n            <Text>\n              {flight_number} : {mission_name}\n            </Text>\n          </GridItem>\n        ))}\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default Launches;\n"]},"metadata":{},"sourceType":"module"}